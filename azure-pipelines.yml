name: CI (Tests · Audit · Build)

# Workflow de GitHub Actions (reemplaza el pipeline de Azure).
# Ejecuta: pruebas automatizadas (npm test), escaneo de vulnerabilidades (npm audit) y construcción/empacado.
# Comentarios en español y anotaciones sobre posibles costes.

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'
  ARTIFACT_NAME: 'webapp-artifact'

jobs:
  test-and-audit:
    name: Pruebas y Escaneo de Vulnerabilidades
    runs-on: ubuntu-latest
    # Nota: runners hospedados por GitHub consumen minutos de tu cuota (privado) o son gratuitos para repos públicos.
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.NODE_VERSION }}-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies (npm ci)
        run: npm ci

      - name: Run tests
        run: npm test --silent

      - name: npm audit (generar audit.json)
        run: |
          npm audit --json > audit.json || true
          node -e "const fs=require('fs');const p='audit.json';if(!fs.existsSync(p)){console.log('No hay reporte de audit');process.exit(0);}const a=JSON.parse(fs.readFileSync(p));const v=(a.metadata&&a.metadata.vulnerabilities)?a.metadata.vulnerabilities:{}; if((v.high||0)>0 || (v.critical||0)>0){ console.error('Vulnerabilidades HIGH/CRITICAL detectadas:',JSON.stringify(v)); process.exit(2);} else { console.log('No se detectaron vulnerabilidades HIGH/CRITICAL.'); process.exit(0);}"
        # Nota: npm audit es gratuito pero consume tiempo de runner. Para análisis más avanzados se pueden integrar Snyk/Trivy (pueden requerir token y plan).

      - name: Upload audit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: audit-report
          path: audit.json

  build:
    name: Construcción y Empaquetado
    runs-on: ubuntu-latest
    needs: test-and-audit
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies (npm ci)
        run: npm ci

      - name: Build / Empaquetar
        run: |
          mkdir -p build
          # Ajusta aquí si tienes un build script real (ej: npm run build)
          zip -r build/${{ env.ARTIFACT_NAME }}.zip . -x "node_modules/*" ".git/*" "tests/*"

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: build/${{ env.ARTIFACT_NAME }}.zip

# Costes / notas:
# - GitHub-hosted runners: gratuitos para repositorios públicos; privados usan minutos de la cuota de tu plan.
# - npm audit y npm ci consumen tiempo de ejecución; reducir frecuencia (ejecutar sólo en main) ayuda a contener costes.
# - Subir artefactos consume almacenamiento (revisa políticas de retención en GitHub Actions).
